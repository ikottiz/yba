if game.PlaceId == 2809202155 then
	while not game:IsLoaded() do wait() end
	--serverhop
	function serverhop()
		placeId = game.PlaceId
		function findTeleport()
			local nextCursor;
			while true do
				if nextCursor == 'end' then
					break
				elseif not nextCursor then
					nextCursor = ''
				end
				url = 'https://games.roblox.com/v1/games/'..tostring(placeId)..'/servers/Public?sortOrder=Desc&excludeFullGames=true&limit=100&cursor='..nextCursor
				local request = game:HttpGet(url)
				local jsonDecode = game:GetService("HttpService"):JSONDecode(request)
				nextCursor = jsonDecode.nextPageCursor
				if not nextCursor then
					nextCursor = 'end'
				end
				local data = jsonDecode.data
				for i,v in pairs(data) do
					if not oldServers[v.id] then
						serverId = v.id
					end
				end
				if serverId then
					game:GetService('TeleportService'):TeleportToPlaceInstance(placeId, serverId, game.Players.LocalPlayer, nil, oldServers)
					break
				end
			end
		end

		oldServers = game:GetService('TeleportService'):GetLocalPlayerTeleportData() or {}
		oldServers[game.JobId] = true
		findTeleport()
		if not serverId then
			oldServers = {[game.JobId] = true}
			findTeleport()
		end
		if not serverId then
			oldServers = {}
			findTeleport()
		end
	end
	--item handler
	local oldmeta
	   print('item handler0')
	   oldmeta = hookmetamethod(game,"__newindex",function(self, key, val)
		if self.Name == 'ItemSpawn' and key == 'OnClientInvoke' then
		print('item handler1')
			_G.spawnFunc = val
			print('item handler2')
			_G.funcReturn = getconstants(val)[3]
			print('item handler3')
			u1 = {}
			print('item handler4')
			funcfor = function(arg1, list)
				if not u1[list.CD] then
					u1[list.CD] = true
					--print('Item added',list.Replica)
					local clon = list.Replica:Clone()
					clon.Parent = game:GetService("Workspace")["Item_Spawns"].Items
					clon.Base.CFrame = list.CFrame
					list.CD.Parent = clon
					local v30 = list.CD:Clone()
					v30.Enabled = true
					v30.Parent = clon
					v30.Name = 'RightPrompt'
					u8 = {}
					u8[1] = v30.Triggered:Connect(function(p2)
						list.CD.RemoteEvent:FireServer()
					end)
					local function v31()
						if not u1[list.CD] then
							return
						end
						u1[list.CD] = nil
						if clon then
							clon:Destroy()
						end
						if list.CD then
							list.CD:Destroy()
						end
					end
					u8[2] = clon.ChildRemoved:Connect(function(p3)
						if p3 == list.CD or not list.CD or not list.CD.Parent then
							v31();
						end;
					end)
				end
				return _G.funcReturn
			end
			return oldmeta(self, key, funcfor)
		end
		return oldmeta(self, key, val)
	end)
	--anti-tp bypass
	local oldnamecall
	oldnamecall = hookmetamethod(game,"__namecall",function(self, ...)
		local args = {...}
		if string.lower(tostring(self.Name)) == "returner" and args[1] == "idklolbrah2de" then
			return "  ___XP DE KEY"		
		elseif string.lower(tostring(self.Name)) == "remote event" then
			if args[1] == "Reset" then
				return nil
			end
			if args[2] == "Enum.HumanoidStateType.PlatformStanding" then
				return nil
			end
		end
		return oldnamecall(self, ...)
	end)
	print('anti-tp bypass loaded')
	--fps
	game:GetService('RunService'):Set3dRenderingEnabled(d.settings.render)
	if d.settings.fpsBoost then
		for _,v in pairs(game:GetService("Workspace"):GetDescendants()) do
			if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
				v.Material = Enum.Material.SmoothPlastic;
				if v:IsA("Texture") then
					v:Destroy();
				end 
			end;		
		end;
	end
	--loading and play button --
	task.wait(tonumber(d.settings.defaultTime))
	while true do
		for i,v in pairs(game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):GetDescendants()) do
			if v.Name == 'TextButton' and v.Parent.Name == 'Skip' then
				loading = v
			end
		end
		if loading then
			break
		end
	end
	while #getconnections(loading.MouseButton1Click) == 0 do wait() end
	for i,v in pairs(getconnections(loading.MouseButton1Click)) do
		v.Function()
	end
	print('loading skipped')
	task.wait(tonumber(d.settings.defaultTime))
	while true do
		for i,v in pairs(game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):GetDescendants()) do
			if v.Name == 'Play' and v.Parent.Name == 'LoadingScreen' then
				playbtn = v
			end
		end
		if playbtn then
			break
		end
	end
	while #getconnections(playbtn.MouseButton1Click) == 0 do wait() end
	for i,v in pairs(getconnections(playbtn.MouseButton1Click)) do
		v.Function()
	end
	print('play skipped')
	--error handler
	game:GetService('CoreGui').RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
		if child.Name == 'ErrorPrompt' then
			serverhop()
		end
	end)
	--loop
	local players = game.Players
	local player = players.LocalPlayer
	task.spawn(function()
		task.wait(tonumber(d.settings.serverTime))
		getgenv().hop = true
	end)
	task.wait(tonumber(d.settings.defaultTime))
	while task.wait() do --autofarm loop
		local items2 = 0 --counter
		for i,v in pairs(game.Workspace.Item_Spawns.Items:GetChildren()) do
			for key,value in pairs(d.items) do
				if v.Name == key and value then
					items2 += 1
					print('item found:',key)
					local base,prompt = v:FindFirstChild('Base'),v:FindFirstChild('RightPrompt')
					if v.Parent then
					    	player.Character.HumanoidRootPart.CFrame = CFrame.new(base.Position)
						print('teleported')
						task.wait(tonumber(d.settings.defaultTime))
						if player:DistanceFromCharacter(base.Position) < 10 then --if teleported
							task.wait(tonumber(d.settings.defaultTime))
							fireproximityprompt(prompt)
							print('collected:',key)
							task.wait(tonumber(d.settings.defaultTime))
							items2 -= 1
						end
					end
				end
			end
		end
		if items2 < 1 and getgenv().hop then
		print('all items collected')
			if d.settings.serverHop then
			print('changing server')
				serverhop()
			end
			break
		end
	end
end
