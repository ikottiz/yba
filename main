if game.PlaceId == 2809202155 then
	--disable 3d render
	game:GetService('RunService'):Set3dRenderingEnabled(dic.render)
	setfpscap(dic.fpscap)
	--bypasses
	loadstring(game:HttpGet('https://raw.githubusercontent.com/ikottiz/yba/main/bypasses'))()
	--cuh
	while not game:IsLoaded() do wait() end
	--serverhop
	function serverhop()
		placeId = game.PlaceId
		function findTeleport()
			local nextCursor;
			while true do
				if nextCursor == 'end' then
					break
				elseif not nextCursor then
					nextCursor = ''
				end
				url = 'https://games.roblox.com/v1/games/'..tostring(placeId)..'/servers/Public?sortOrder=Desc&excludeFullGames=true&limit=100&cursor='..nextCursor
				local req = game:HttpGet(url)
				local jsonDecode = game:GetService("HttpService"):JSONDecode(req)
				nextCursor = jsonDecode.nextPageCursor
				if not nextCursor then
					nextCursor = 'end'
				end
				local data = jsonDecode.data
				for i,v in pairs(data) do
					if not oldServers[v.id] then
						serverId = v.id
					end
				end
				if serverId then
					game:GetService('TeleportService'):TeleportToPlaceInstance(placeId, serverId, game.Players.LocalPlayer, nil, oldServers)
					break
				end
			end
		end
	
		oldServers = game:GetService('TeleportService'):GetLocalPlayerTeleportData() or {}
		oldServers[game.JobId] = true
		findTeleport()
		if not serverId then
			oldServers = {[game.JobId] = true}
			findTeleport()
		end
		if not serverId then
			oldServers = {}
			findTeleport()
		end
	end
	--collect function
	function collect(instance)
		local base,prompt = instance:FindFirstChild('Base'),instance:FindFirstChild('RightPrompt')
		if instance.Parent and prompt.Parent ~= nil and prompt.MaxActivationDistance ~= 0 then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(base.Position) --teleport
			wait(.25)
			if game.Players.LocalPlayer:DistanceFromCharacter(base.Position) < 20 then --if teleported
				fireproximityprompt(prompt)
				wait(1)
			end
		end
	end
	--getarrows
	function getArrows()
		local arrows = 0
		for i,v in ipairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			if v.Name == 'Lucky Arrow' then
				arrows = arrows + 1
			end
		end
		return tostring(arrows)
	end
    --webhook
    function webhook(text,url)
        syn.request({
            Url = url,
            Method = "POST",
            Headers = {["content-type"] = "application/json" },
            Body = game:GetService('HttpService'):JSONEncode({
                ["content"] = "",
                ["embeds"] = {{
                    ["title"] = text,
                    ["description"] = "",
                    ["type"] = "rich",
                    ["color"] = tonumber(0xA1C3A9),
                    ["fields"] = {
                        {
                            ["name"] = "Account:",
                            ["value"] = game.Players.LocalPlayer.Name,
                            ["inline"] = false
                        },
                        {
                            ["name"] = "Arrows:",
                            ["value"] = getArrows(),
                            ["inline"] = false
                        },
                        {
                            ["name"] = "Players:",
                            ["value"]= #game:GetService("Players"):GetPlayers(),
                            ["inline"] = false,
                        },
                    },
                }}
            })
        })
    end
	--starting
	game.Players.LocalPlayer:WaitForChild('PlayerGui').DescendantRemoving:Connect(function(d)
		if d.Name == 'LoadingScreen1' then
            webhook('**Logs**',dic.logsWebhook)
		end
	end)
	--error handler,server hop on kick or teleport failure
	game:GetService('CoreGui').RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
		if child.Name == 'ErrorPrompt' then
			serverhop()
		end
	end)
    --item notifier
	game.Players.LocalPlayer.Backpack.ChildAdded:Connect(function(child)
        for k, item in pairs(dic.items) do
            if child.Name == k and item then
                webhook("**"..child.Name.." found!**",dic.farmWebhook)
            end
        end
	end)
    local serverHop
    --loop
    while wait() do
        for _,item in ipairs(game.Workspace.Item_Spawns.Items:GetChildren()) do
            serverHop = true
            for _,itemInTable in ipairs(dic.items) do
                if item.Parent:FindFirstChild(itemInTable) then
                    serverHop = false
                end
                if item.Name == itemInTable then
                    collect(item)
                end
            end
            if serverHop then
                serverhop()
            end
        end
    end
end
