--item spawn
local oldnewindex
oldnewindex = hookmetamethod(game,"__newindex",function(self, key, val)
    if self.Name == 'ItemSpawn' and key == 'OnClientInvoke' then
        _G.spawnFunc = val
        _G.funcReturn = getconstants(val)[3]
        local u1 = {}
        local funcfor = function(arg1, list)
            if not u1[list.CD] then
                u1[list.CD] = true
                local clon = list.Replica:Clone()
                clon.Parent = workspace["Item_Spawns"].Items
                clon.Base.CFrame = list.CFrame
                list.CD.Parent = clon
                local v30 = list.CD:Clone()
                v30.Enabled = true
                v30.Parent = clon
                v30.Name = 'RightPrompt' --for gods sake
                local u8 = {}
                u8[1] = v30.Triggered:Connect(function(p2)
                    list.CD.RemoteEvent:FireServer() --pick up remote
                end)
                local function v31()
                    if not u1[list.CD] then
                        return
                    end
                    u1[list.CD] = nil
                    if clon then
                        clon:Destroy()
                    end
                    if list.CD then
                        list.CD:Destroy()
                    end
                end
                u8[2] = clon.ChildRemoved:Connect(function(p3)
                    if p3 == list.CD or not list.CD or not list.CD.Parent then
                        v31();
                    end;
                end)
            end
            return _G.funcReturn
        end
        return oldnewindex(self, key, funcfor)
    end
    return oldnewindex(self, key, val)
end)
--anti-tp bypass
local oldnamecall
oldnamecall = hookmetamethod(game,"__namecall",function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if tostring(self) == "Returner" and tostring(method) == "InvokeServer" then --remote that fires when you teleports
        return "  ___XP DE KEY"
    end
    return oldnamecall(self, ...)
end)
while not game:IsLoaded() do wait() end
--loading skip
local m1 = function(path)
    firesignal(path.MouseEnter)
    firesignal(path.MouseButton1Up)
    firesignal(path.MouseButton1Click)
    firesignal(path.Activated)
end
while wait() do
    for i,v in pairs(game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui'):GetDescendants()) do
        if v.Name == 'TextButton' and v.Parent.Name == 'Skip' then
	    m1(v)
        elseif v.Name == 'Play' and v.Parent.Name == 'Main' then
	    m1(v)
	elseif v.Name == 'Play' and v.Parent.Name == 'MainGame' then
	    m1(v)
	    break
        end
    end
end
--captcha bypass
game:GetService("Players").LocalPlayer:WaitForChild('PlayerGui').ChildAdded:Connect(function(child)
    if child:IsA("ScreenGui") and child.Name == "ScreenGui" and child.DisplayOrder == 100 then
        for i,v in ipairs(child:GetDescendants()) do
            if v:IsA("ImageButton") then
                local text = v:FindFirstChildOfClass("TextLabel")
                if text and text.Text ~= "X" then
                    repeat
                        task.wait()
                    until text.TextColor3 ~= Color3.fromRGB(255,255,255)
                    if text.TextColor3 == Color3.fromRGB(0, 255, 0) then
			m1(v)
                    end
                end
            end
        end
    end
end)
